/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package chat.multicast.cliente;

import chat.multicast.compartido.Interaccion;
import chat.multicast.compartido.Puertos;
import java.io.DataInputStream;
import java.io.IOException;
import java.net.DatagramPacket;
import java.net.InetAddress;
import java.net.MulticastSocket;
import java.net.ServerSocket;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Antonio
 */
public class ClienteGUI extends javax.swing.JFrame implements NuevoMensajeListener{
    
    private MulticastSocket socket;
    private ReceptorMensajes receiver;
    ServerSocket serverSocket;
    private InetAddress multicastAddress;

    /**
     * Creates new form ClienteGUI
     */
    public ClienteGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jScrollPane1 = new javax.swing.JScrollPane();
        message = new javax.swing.JTextArea();
        buttonEnviar = new javax.swing.JButton();
        jMenuBar3 = new javax.swing.JMenuBar();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        message.setColumns(20);
        message.setRows(5);
        jScrollPane1.setViewportView(message);

        buttonEnviar.setText("jButton1");
        buttonEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEnviarActionPerformed(evt);
            }
        });

        jMenu4.setText("File");

        jMenuItem1.setText("Conectar");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem1);

        jMenuItem2.setText("Ping");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem2);

        jMenuBar3.add(jMenu4);

        setJMenuBar(jMenuBar3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonEnviar)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(172, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(buttonEnviar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        try {
            connect("229.2.2.2");
        } catch (UnknownHostException ex) {
            System.out.println(ex.getMessage());
        } catch (IOException ex) {
            System.out.println(ex.getMessage());
        }
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed
    
    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        ping();
    }//GEN-LAST:event_jMenuItem2ActionPerformed
    
    private void buttonEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEnviarActionPerformed
        
        sendMessage(message.getText());
        message.setText("");
    }//GEN-LAST:event_buttonEnviarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClienteGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClienteGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClienteGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClienteGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClienteGUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonEnviar;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar3;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea message;
    // End of variables declaration//GEN-END:variables

    private void connect(String multicastAddress)
            throws UnknownHostException, IOException {
        this.multicastAddress = InetAddress.getByName(multicastAddress);
        
        DatagramPacket dp;
        socket = new MulticastSocket(Puertos.SERVIDOR_MULTICAST);
        socket.setTimeToLive(200);
        socket.joinGroup(this.multicastAddress);
        //socket.setLoopbackMode(true);
        byte[] data = new byte[Interaccion.MAX_BUFFER_SIZE];

        // <editor-fold desc="Aviso de conexión">
        data[0] = Interaccion.SALUDO_CLIENTE;
        byte[] nombre = "Hola".getBytes();
        data[1] = (byte) nombre.length;
        System.arraycopy(nombre, 0, data, 2, nombre.length);
        
        dp = new DatagramPacket(data, Interaccion.MAX_BUFFER_SIZE, this.multicastAddress, Puertos.SERVIDOR_MULTICAST);
        socket.send(dp);
        // </editor-fold>
        receiver = new ReceptorMensajes(socket);
        receiver.addListener(this);
        receiver.start();
    }
    
    private void ping() {
        try {
            byte[] data = new byte[Interaccion.MAX_BUFFER_SIZE];
            data[0] = Interaccion.PING;
            DatagramPacket dp = new DatagramPacket(data, Interaccion.MAX_BUFFER_SIZE, this.multicastAddress, Puertos.SERVIDOR_MULTICAST);
            socket.send(dp);
        } catch (IOException ex) {
        }
    }
    
    private void sendMessage(String message) {
        
        if (!message.isEmpty()) {
            try {
                byte[] data = new byte[Interaccion.MAX_BUFFER_SIZE];

                // <editor-fold desc="Aviso de conexión">
                data[0] = Interaccion.MENSAJE_GRUPAL;
                byte[] nombre = message.getBytes();
                System.arraycopy(nombre, 0, data, 1, nombre.length);
                
                DatagramPacket dp  = new DatagramPacket(data, Interaccion.MAX_BUFFER_SIZE, this.multicastAddress, Puertos.SERVIDOR_MULTICAST);
                socket.send(dp);
                
            } catch (IOException ex) {
            }
        }
    }

    @Override
    public void nuevoMensajeHandler(NuevoMensajeEvent e) {
        System.out.println(e.getSender() + " dice: " + e.getTexto());
    }
}
